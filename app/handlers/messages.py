from aiogram import Router, types
from aiogram.types import FSInputFile
from pathlib import Path
from utils.logger import logger

router = Router()

@router.message()
async def handle_message(message: types.Message):
    user_text = message.text.lower()
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª: {user_text}")

    if user_text == "–ø—Ä–∏–≤–µ—Ç":
        await message.answer("–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç! üòä")
    elif user_text == "–ø–æ–º–æ—â—å":
        await message.answer("–í–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")
    elif user_text == "–º–æ–∏ –¥–∞–Ω–Ω—ã–µ":
        user = message.from_user
        await message.answer(
            f"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n"
            f"ID: {user.id}\n"
            f"–ò–º—è: {user.first_name}\n"
            f"–§–∞–º–∏–ª–∏—è: {user.last_name or '–Ω–µ—Ç'}\n"
            f"Username: @{user.username}"
        )
    elif user_text == "–æ–∫–∞–∫":
        try:
            image_path = Path(__file__).parent.parent / "images" / "okak.jpg"
            if not image_path.exists():
                raise FileNotFoundError(f"–§–∞–π–ª {image_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")

            photo = FSInputFile(image_path)
            await message.answer_photo(photo, caption="–æ–∫–∞–∫")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ üò¢")
    else:
        await message.answer(user_text[::-1])
