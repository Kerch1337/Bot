version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: pg_db
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - bot_net

  bot:
    build: .
    container_name: telegram_bot
    env_file:
      - .env
    working_dir: /app
    volumes:
      - ./app/images:/app/images
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - bot_net

  alembic:
    build:
      dockerfile: Dockerfile.alembic
      context: .
    environment:
      - PYTHONPATH=/app/app
    container_name: alembic
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - bot_net

networks:
  bot_net:
    driver: bridge

volumes:
  pg_data: